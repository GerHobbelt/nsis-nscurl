name: Experiments
on:
  workflow_dispatch

jobs:
  experiments:
    outputs:
      # accessible from other jobs as ${{needs.experiments.outputs.version}}
      version: ${{steps.version.outputs.version}}

    runs-on: windows-latest
    steps:

      # - name: Checkout
      #   uses: actions/checkout@v4
      #   with:
      #     submodules: 'true'

      - name: Print environment (before)
        shell: cmd
        run: |
              echo ----------------------------------------------------
              set
              echo ----------------------------------------------------
              for %%d in (%SystemDrive%\msys64\mingw32 %SystemDrive%\msys64\mingw64 %SystemDrive%\mingw32 %SystemDrive%\mingw64) do (
                if exist "%%d\bin\gcc.exe" echo ---------- %%d\bin\gcc.exe ---------- && "%%d\bin\gcc.exe" -v
              )
              echo ----------------------------------------------------
              dir /b /s %SystemDrive%\msys64\*.exe
              echo ----------------------------------------------------
              where gcc.exe
              gcc.exe -v
              echo ====================================================
              py -0p
              echo ----------------------------------------------------
              py -3 -V
              py -3 -m pip list

      # [note] Pulls latest mingw-w64 (14.2.0) using msys2/pacman
      # [note] Quite slow (4-5m)
      # - name: Setup msys2/mingw32
      #   id: setup-msys2-mingw32
      #   uses: msys2/setup-msys2@v2
      #   with:
      #     msystem: mingw32
      #     release: false
      #     update: true
      #     install: mingw-w64-i686-toolchain
          
      # - name: Setup msys2/mingw64
      #   id: setup-msys2-mingw64
      #   uses: msys2/setup-msys2@v2
      #   with:
      #       msystem: mingw64
      #       release: false
      #       update: true
      #       install: mingw-w64-x86_64-toolchain
      
      # [note] Downloads an older mingw-w64 (13.2.0) with Chocolately
      # [note] Runtime error: Cannot find path 'C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw32\i686-w64-mingw32\lib\libpthread.dll.a' because it does not exist
      # - name: Setup mingw32
      #   id: setup-mingw32
      #   uses: egor-tensin/setup-mingw@v2
      #   with:
      #     platform: x86

      # - name: Setup mingw64
      #   id: setup-mingw64
      #   uses: egor-tensin/setup-mingw@v2
      #   with:
      #     platform: x64

      - name: Print environment
        shell: cmd
        run: |
              echo ----------------------------------------------------
              set
              echo ----------------------------------------------------
              for %%d in (%SystemDrive%\msys64\mingw32 %SystemDrive%\msys64\mingw64 %SystemDrive%\mingw32 %SystemDrive%\mingw64) do (
                if exist "%%d\bin\gcc.exe" echo ---------- %%d\bin\gcc.exe ---------- && "%%d\bin\gcc.exe" -v
              )
              echo ----------------------------------------------------
              dir /b /s %SystemDrive%\msys64\*.exe
              echo ----------------------------------------------------
              where gcc.exe
              gcc.exe -v
              echo ====================================================
              py -0p
              echo ----------------------------------------------------
              py -3 -V
              py -3 -m pip list

      - id: version
        name: Version
        shell: python
        run: |
          import os
          from datetime import datetime, timezone
          date = datetime.now(tz=timezone.utc)
          with open(os.getenv('GITHUB_OUTPUT'), "a") as fout:
            print(     f"version={date.year%100}.{date.month}.{date.day}.${{github.run_number}}")
            fout.write(f"version={date.year%100}.{date.month}.{date.day}.${{github.run_number}}")

      - name: Print version
        shell: cmd
        run: |
          echo -- version is ${{steps.version.outputs.version}}

  results:
    runs-on: windows-latest
    needs: experiments
    steps:
      - name: Print version
        shell: cmd
        run: |
            echo previous version=${{needs.experiments.outputs.version}}
